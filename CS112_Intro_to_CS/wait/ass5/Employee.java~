public abstract class Employee 
{
    private final String firstName;
    private final String lastName;
    private final String socialSecurityNumber;

    // constructor
    public Employee(String firstName, String lastName, 
		    String socialSecurityNumber)
    {
	this.firstName = firstName;
	this.lastName = lastName;                                    
	this.socialSecurityNumber = socialSecurityNumber;         
    } 

    // return first name
    public String getFirstName()
    {
	return firstName;
    } 

    // return last name
    public String getLastName()
    {
	return lastName;
    } 

    // return social security number
    public String getSocialSecurityNumber()
    {
	return socialSecurityNumber;
    } 

    // return String representation of Employee object

    public boolean equals(Employee other)
    {
        return this.firstname.equals(other.getFirstName()) && this.lastname.equals(other.lastname) && this.socialSecurityNumber.equals(other.socialSecurityNumber);
//        if(!(otherObject instanceof Coin))
//            return false;
//        Coin other = (Coin) otherObject;
//        return name.equals(other.name) && value == other.value;
    }
   @Override
       public String toString()
    {
	return String.format("%s %s%nsocial security number: %s", 
			     getFirstName(), getLastName(), getSocialSecurityNumber());
    } 

    // abstract method must be overridden by concrete subclasses
    public abstract double earnings(); // no implementation here
} // end abstract class Employee